\section{Square Roots Modulo \(p\) (for \(p \equiv 3 \mod 4\))}
\subsection*{Question}
Given an odd prime \(p\) (with \(p \equiv 3 \pmod{4}\)) and an integer \(a\) that is known to be a quadratic residue modulo \(p\), design an algorithm to compute an integer \(x\) such that:
\[
x^2 \equiv a \pmod{p}.
\]
Your solution should exploit the special properties of primes \(p \equiv 3 \pmod{4}\) to compute \(x\) efficiently without using brute-force methods.

\subsection*{Hints}

\subsection*{Few-Shot Hinting}
Study these illustrative cases carefully (note: the method to compute \(x\) involves a clever use of modular exponentiation without directly testing all possibilities):
- **Case 1:** For \(a = 2\) and \(p = 7\), a valid square root is \(x = 4\) (since \(4^2 = 16 \equiv 2 \pmod{7}\)).
- **Case 2:** For \(a = 4\) and \(p = 7\), a valid square root is \(x = 2\) (because \(2^2 = 4 \pmod{7}\)).
- **Case 3:** For \(a = 5\) and \(p = 11\), a valid square root is \(x = 4\) (since \(4^2 = 16 \equiv 5 \pmod{11}\)).
- **Case 4:** For \(a = 9\) and \(p = 11\), a valid square root is \(x = 3\) (as \(3^2 = 9 \pmod{11}\)).
- **Case 5:** For \(a = 6\) and \(p = 19\), a valid square root is \(x = 5\) (because \(5^2 = 25 \equiv 6 \pmod{19}\)).

\subsection*{Chain-of-Thought (CoT) Prompting}
*"First, verify that \(a\) is a quadratic residue modulo \(p\) (consider using Euler’s Criterion). Then, observe that the structure of primes with \(p \equiv 3 \pmod{4}\) permits the use of a specific exponent in a modular exponentiation step to produce a candidate square root. Finally, ensure that when the candidate is squared, it reproduces \(a\) modulo \(p\)."*

\subsection*{Automatic Chain-of-Thought (Auto-CoT) Prompting}
*"Let’s break down the process step by step:  
1. Verify that \(a^{\frac{p-1}{2}} \equiv 1 \pmod{p}\) to confirm that \(a\) is a quadratic residue.  
2. Exploit the fact that \(p \equiv 3 \pmod{4}\) to determine a derived exponent suitable for a single modular exponentiation step.  
3. Compute the candidate square root using this derived exponent.  
4. Confirm that squaring the candidate returns \(a \pmod{p}\)."*

\subsection*{Self-Consistency}
*"After computing your candidate square root, double-check by:  
- Re-verifying \(a^{\frac{p-1}{2}} \equiv 1 \pmod{p}\) to ensure \(a\) is a valid quadratic residue.  
- Squaring the candidate to confirm that \(x^2 \equiv a \pmod{p}\).  
- Comparing with alternative reasoning paths to see if they lead to the same result."*

\subsection*{Logical Chain-of-Thought (LogiCoT) Prompting}
*"Reflect on the following points:  
- Euler’s Criterion confirms the quadratic residuosity: \(a^{\frac{p-1}{2}} \equiv 1 \pmod{p}\).  
- The condition \(p \equiv 3 \pmod{4}\) implies that there is an exponent (derivable from \(p\)'s structure) that, when used in modular exponentiation, yields the square root directly.  
- Finally, verify that the computed candidate satisfies \(x^2 \equiv a \pmod{p}\)."*

\subsection*{Chain-of-Symbol (CoS) Prompting}
*"In symbolic terms:  
- Confirm: \(a^{\frac{p-1}{2}} \equiv 1 \pmod{p}\).  
- Determine an exponent \(E\) (arising from the condition \(p \equiv 3 \pmod{4}\)) such that \(x = a^E \pmod{p}\) meets the requirement \(x^2 \equiv a \pmod{p}\)."*

\subsection*{Structured Chain-of-Thought (SCoT) Prompting}
*"Outline your approach as follows:  
1. **Residue Verification:** Compute \(r = a^{\frac{p-1}{2}} \pmod{p}\) to ensure \(r = 1\).  
2. **Candidate Computation:** Use the special properties of \(p \equiv 3 \pmod{4}\) to derive an appropriate exponent \(E\) and compute \(x = a^E \pmod{p}\).  
3. **Verification:** Check that \(x^2 \equiv a \pmod{p}\).  
4. **Result:** Return \(x\) as the square root of \(a\) modulo \(p\)."*

\subsection*{ReAct Prompting}
*"Proceed with these actions and corresponding reasoning:  
- **Action:** Verify that \(a\) is a quadratic residue using a suitable criterion based on exponentiation.  
- **Reasoning:** Recognize that the structure \(p \equiv 3 \pmod{4}\) enables a direct computation of the square root via a derived exponent.  
- **Action:** Compute the candidate square root using modular exponentiation with the derived exponent.  
- **Reasoning:** Validate that the candidate, when squared, satisfies \(x^2 \equiv a \pmod{p}\) before finalizing your answer."*

\subsection*{Clear and Specific Instructions}
*"For a given odd prime \(p\) with \(p \equiv 3 \pmod{4}\) and an integer \(a\) (which is a quadratic residue modulo \(p\)), follow these steps:  
1. Verify quadratic residuosity of \(a\) (for example, by checking that \(a^{\frac{p-1}{2}} \equiv 1 \pmod{p}\)).  
2. Determine a suitable exponent (using the fact that \(p \equiv 3 \pmod{4}\)) to compute a candidate square root via modular exponentiation.  
3. Compute the candidate \(x\) and confirm that \(x^2 \equiv a \pmod{p}\).  
4. Return \(x\) as the square root of \(a\) modulo \(p\)."*

\subsection*{Answer/Algorithm}
\begin{lstlisting}[language=Python]
def sqrt_mod_p(a: int, p: int) -> int:
    from sympy import mod_exp
    
    # Verify that 'a' is a quadratic residue modulo p using Euler's Criterion.
    if mod_exp(a, (p - 1) // 2, p) != 1:
        return None  # 'a' is not a quadratic residue modulo p.
    
    # Compute the candidate square root using a derived exponent based on the fact that p ≡ 3 (mod 4).
    # (Note: The derivation of this exponent leverages the structure of p without resorting to trial and error.)
    x = mod_exp(a, (p + 1) // 4, p)
    
    # Optional: Validate that x^2 ≡ a (mod p) before returning.
    return x
\end{lstlisting}
